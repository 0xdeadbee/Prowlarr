<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Migrator</name>
    </assembly>
    <members>
        <member name="T:Migrator.DuplicatedVersionException">
            <summary>
            Exception thrown when a migration number is not unique.
            </summary>
        </member>
        <member name="T:Migrator.ProviderFactory">
            <summary>
            Handles loading Provider implementations
            </summary>
        </member>
        <member name="T:Migrator.MigrateAnywhere">
            <summary>
            Description of MigrateAnywhere.
            </summary>
        </member>
        <member name="M:Migrator.BaseMigrate.NextMigration">
            <summary>
            Finds the next migration available to be applied.  Only returns
            migrations that have NOT already been applied.
            </summary>
            <returns>The migration number of the next available Migration.</returns>
        </member>
        <member name="M:Migrator.BaseMigrate.PreviousMigration">
            <summary>
            Finds the previous migration that has been applied.  Only returns
            migrations that HAVE already been applied.
            </summary>
            <returns>The most recently applied Migration.</returns>
        </member>
        <member name="T:Migrator.IrreversibleMigrationException">
            <summary>
            Exception thrown in a migration <c>Down()</c> method
            when changes can't be undone.
            </summary>
        </member>
        <member name="T:Migrator.Migrator">
            <summary>
            Migrations mediator.
            </summary>
        </member>
        <member name="M:Migrator.Migrator.MigrateToLastVersion">
            <summary>
            Run all migrations up to the latest.  Make no changes to database if
            dryrun is true.
            </summary>
        </member>
        <member name="M:Migrator.Migrator.MigrateTo(System.Int64)">
            <summary>
            Migrate the database to a specific version.
            Runs all migration between the actual version and the
            specified version.
            If <c>version</c> is greater then the current version,
            the <c>Up()</c> method will be invoked.
            If <c>version</c> lower then the current version,
            the <c>Down()</c> method of previous migration will be invoked.
            If <c>dryrun</c> is set, don't write any changes to the database.
            </summary>
            <param name="version">The version that must became the current one</param>
        </member>
        <member name="P:Migrator.Migrator.MigrationsTypes">
            <summary>
            Returns registered migration <see cref="T:System.Type">types</see>.
            </summary>
        </member>
        <member name="P:Migrator.Migrator.AppliedMigrations">
            <summary>
            Returns the current migrations applied to the database.
            </summary>
        </member>
        <member name="P:Migrator.Migrator.Logger">
            <summary>
            Get or set the event logger.
            </summary>
        </member>
        <member name="T:Migrator.MigrationLoader">
            <summary>
            Handles inspecting code to find all of the Migrations in assemblies and reading
            other metadata such as the last revision, etc.
            </summary>
        </member>
        <member name="M:Migrator.MigrationLoader.CheckForDuplicatedVersion">
            <summary>
            Check for duplicated version in migrations.
            </summary>
            <exception cref="M:Migrator.MigrationLoader.CheckForDuplicatedVersion">CheckForDuplicatedVersion</exception>
        </member>
        <member name="M:Migrator.MigrationLoader.GetMigrationTypes(System.Reflection.Assembly)">
            <summary>
            Collect migrations in one <c>Assembly</c>.
            </summary>
            <param name="asm">The <c>Assembly</c> to browse.</param>
            <returns>The migrations collection</returns>
        </member>
        <member name="M:Migrator.MigrationLoader.GetMigrationVersion(System.Type)">
            <summary>
            Returns the version of the migration
            <see cref="T:Migrator.Framework.MigrationAttribute">MigrationAttribute</see>.
            </summary>
            <param name="t">Migration type.</param>
            <returns>Version number sepcified in the attribute</returns>
        </member>
        <member name="P:Migrator.MigrationLoader.MigrationsTypes">
            <summary>
            Returns registered migration <see cref="T:System.Type">types</see>.
            </summary>
        </member>
        <member name="P:Migrator.MigrationLoader.LastVersion">
            <summary>
            Returns the last version of the migrations.
            </summary>
        </member>
        <member name="T:Migrator.MigrationTypeComparer">
            <summary>
            Comparer of Migration by their version attribute.
            </summary>
        </member>
    </members>
</doc>
