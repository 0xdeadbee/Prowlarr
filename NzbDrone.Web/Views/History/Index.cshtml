@model List<NzbDrone.Web.Models.HistoryModel>
@using NzbDrone.Web.Models
@section Scripts{
    <script type="text/javascript">
        function onRowDataBound(e) {

            e.row.style.boarder = "";

            if (e.dataItem.Level == 3) {
                e.row.style.backgroundColor = "#FFD700";
            }
            else if (e.dataItem.Level == 4) {
                e.row.style.backgroundColor = "#FF7500";
            }
            else if (e.dataItem.Level == 5) {
                e.row.style.backgroundColor = "black";
                e.row.style.color = "red";
            }
            //e.row.style.color = 'blue';
        }
    </script>
}
@section TitleContent{
History
}
@section ActionMenu{
    @{Html.Telerik().Menu().Name("historyMenu").Items(items =>
            {
                items.Add().Text("Trim History").Action("Trim", "History");
                items.Add().Text("Purge History").Action("Purge", "History");
            }).Render();}
}
@section MainContent{
    @{Html.Telerik().Grid<HistoryModel>().Name("history")
           .TableHtmlAttributes(new { @class = "Grid" })
            .Columns(columns =>
                         {
                             columns.Bound(c => c.SeriesTitle).Title("Series Name").Width(120);
                             columns.Bound(c => c.SeasonNumber).Title("Season").Width(10);
                             columns.Bound(c => c.EpisodeNumber).Title("Episode").Width(10);
                             columns.Bound(c => c.EpisodeTitle).Title("Episode Title");
                             columns.Bound(c => c.Quality).Title("Quality").Width(10);
                             columns.Bound(c => c.Date).Title("Date/Time Grabbed");
                         })
            .DetailView(detailView => detailView.ClientTemplate(
                "<fieldset>" +
                "<div><b>Overview: </b><#= EpisodeOverview #></div>" +
                "<div><b>NZB Title: </b><#= NzbTitle #></div>" +
                "<div><b>Proper: </b><#= IsProper #></div>" +
                "</fieldset>"
                                          ))
            .DataBinding(data => data.Ajax().Select("_AjaxBinding", "History"))
            .Sortable(rows => rows.OrderBy(epSort => epSort.Add(c => c.Date).Descending()).Enabled(true))
            .Pageable(
                c =>
                c.PageSize(50).Position(GridPagerPosition.Bottom).Style(GridPagerStyles.NextPrevious))
          //.Filterable()
          //.ClientEvents(c => c.OnRowDataBound("onRowDataBound"))
            .Render();}
}
