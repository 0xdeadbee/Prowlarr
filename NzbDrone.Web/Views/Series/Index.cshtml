@using NzbDrone.Core.Repository;
@using NzbDrone.Web.Models;
@model IEnumerable<NzbDrone.Core.Repository.Series>
           
@section TitleContent{
    Series
}

<script>
    (function ($) {
        $.fn.episodeProgress = function (episodes, totalEpisodes) {
            return this.each(
			    function () {
			        var div = $(this);
			        var innerdiv = div.find(".progress");

			        var width = Math.round(episodes / totalEpisodes * 100);
			        innerdiv.css("width", width + "%");
			        div.find(".progressText").html(episodes + " / " + totalEpisodes);
			    }
		    );
        };
    })(jQuery);
</script>

<style>
/* progress bar container */
.progressbar
{
    border:1px solid grey;
    width:125px;
    height:20px;
    position:relative;
    color:black; 
}
/* color bar */
.progressbar div.progress
{
    position:absolute;
    width:0;
    height:100%;
    overflow:hidden;
    background-color:#065EFE;
}
/* text on bar */
.progressbar div.progress .progressText{
    position:absolute;
    text-align:center;
    color:white;
}
/* text off bar */
.progressbar div.progressText{
    position:absolute;
    width:100%;
    height:100%;
    text-align:center;
}
</style>

@section ActionMenu{
    @{Html.RenderPartial("SubMenu");}
}

@section MainContent{
    <div class="grid-container">
        @{Html.Telerik().Grid<SeriesModel>().Name("Grid")
                .TableHtmlAttributes(new { @class = "Grid" })
                .DataKeys(keys => keys.Add(p => p.SeriesId))
                .DataBinding(data => data.Ajax()
                    .Select("_AjaxSeriesGrid", "Series")
                    .Update("_SaveAjaxSeriesEditing", "Series")
                    .Delete("_DeleteAjaxSeriesEditing", "Series"))
                .Columns(columns =>
                             {
                                 columns.Bound(o => o.Title)
                                     .ClientTemplate("<a href=" +
                                                     Url.Action("Details", "Series", new {seriesId = "<#= SeriesId #>"}) +
                                                     "><#= Title #></a>");
                                 columns.Bound(o => o.SeasonsCount).Title("Seasons")
                                     .ClientTemplate("<a href=# onclick=\"openSeasonEditor(<#= SeriesId #>, \'<#= Title #>\'); return false;\"><#= SeasonsCount #></a>");
                                 columns.Bound(o => o.QualityProfileName).Title("Quality");
                                 columns.Bound(o => o.Status);
                                 columns.Bound(o => o.AirsDayOfWeek);
                                 columns.Bound(o => o.Episodes).Title("Episodes").Width(125)
                                     .ClientTemplate("<div id=\"progressbar_<#= SeriesId #>\" class=\"progressbar\">" +
                                                            "<div class=\"progressText\"></div>" + 
                                                            "<div class=\"progress\">" +
                                                                "<span class=\"progressText\" style=\"width: 125px;\"></span>" +
                                                            "</div>" +
                                                     "</div>");
                                 columns.Bound(o => o.Path);
                                 columns.Command(commands =>
                                                     {
                                                         commands.Edit().ButtonType(GridButtonType.Image);
                                                         commands.Delete().ButtonType(GridButtonType.Image);
                                                     }).Title("Actions").Width(80);

                             })
                .Editable(editor => editor.Mode(GridEditMode.PopUp))
                .Sortable(sort => sort.OrderBy(order => order.Add(o => o.Title).Ascending()).Enabled(true))
                .DetailView(detailView => detailView.ClientTemplate("<div style=\"width:95%\"><#= Overview #></div>"))
                .ClientEvents(clientEvents => { clientEvents.OnEdit("grid_edit");
                                                clientEvents.OnDataBinding("grid_bind");
                                                clientEvents.OnDataBound("grid_bound");
                                                clientEvents.OnRowDataBound("grid_rowBound");
                                              })
                .Render();}
        <span class="grid-loader"><img src="@Url.Content( "~/Content/Images/Loading.gif" )" alt="Loading"/> Loading...</span>
    </div>
}

<script type="text/javascript">
    var windowElement;

    function grid_edit(args) {
        $(args.form)
            .closest(".t-window")
            .data("tWindow")
            .center();
    }

    function grid_rowBound(e) {
        var data = e.dataItem;

        var seriesId = data.SeriesId;
        var episodes = data.Episodes;
        var episodeTotal = data.EpisodeTotal;

        $("#progressbar_" + seriesId).episodeProgress(episodes, episodeTotal);
    }


    function openSeasonEditor(seriesId, seriesName) {
        windowElement = null;
        windowElement = $.telerik.window.create({
            title: "<b>Season Editor: " + seriesName + "</b>",
            contentUrl: '@Url.Action("SeasonEditor", "Series")' + '/?seriesId=' + seriesId,
            width: 360,
            height: 400,
            modal: true,
            resizable: false,
            draggable: true,
            scrollable: true
        });

        windowElement.data('tWindow').center();
    }

    function closeSeasonEditor() {
        $('#form').remove();
        var window = windowElement.data("tWindow");
        window.close();
    }
</script>