@using NzbDrone.Web.Helpers;
@model NzbDrone.Web.Models.QualityModel
           
@section HeaderContent{
    <link rel="stylesheet" type="text/css" href="../../Content/Settings.css" />
    <link href="../../Content/QualitySettings.css" rel="stylesheet" type="text/css" />
}

@section TitleContent{
    Settings
}

@section ActionMenu{
    @{Html.RenderPartial("SubMenu");}
}

@section MainContent{
<div id="stylized">
    @using (Html.BeginForm("SaveQuality", "Settings", FormMethod.Post, new { id = "form", name = "form" }))
    {
            <div id="top" class="settingsForm clearfix">
                <h1>Quality</h1>
                <p></p>
                <label class="labelClass">@Html.LabelFor(m => m.DefaultQualityProfileId)
                <span class="small">@Html.DescriptionFor(m => m.DefaultQualityProfileId)</span>
                </label>
                @Html.DropDownListFor(m => m.DefaultQualityProfileId, Model.QualityProfileSelectList, new { @class = "inputClass" })
            </div>

            <div id="bottom" class="clearfix">
                <div id="profileContainer">
                    <div id="profileHeader">
                        <a id="addItem" href="@Url.Action("AddProfile", "Settings")">
                            <img src="../../Content/Images/Plus.png" alt="Add New Profile" width="20px" height="20px" /> Add New Profile</a>
                    </div>
                    
                    <div id="profiles" class="clearfix">
                        @foreach (var item in Model.Profiles)
                        {
                            Html.RenderAction("GetQualityProfileView", item);
                        }
                    </div>
                </div>

                <button type="submit" id="save_button" >Save</button><img src="../../Content/Images/ajax-loader.gif" alt="Loader" id="saveAjax"/>
            </div>
        
    }
</div>

<div id="result" class="hiddenResult"></div>
}

@section Scripts{
    <script src="/Scripts/MicrosoftAjax.js" type="text/javascript"></script>
    <script src="/Scripts/MicrosoftMvcValidation.js" type="text/javascript"></script>
    <script src="../../Scripts/settingsForm.js" type="text/javascript"></script>

    <script type="text/javascript">
        $("#addItem").live('click', function () {
            $.ajax({
                url: this.href,
                cache: false,
                success: function (html) {
                    $("#profiles").append(html);

                }
            });
            return false;
        });

        var deleteQualityProfileUrl = '@Url.Action("DeleteQualityProfile", "Settings")';

        function deleteProfile(id) {
            sendToServer(id);
        }

        function renameOption(text, value) {
            $("#DefaultQualityProfileId option[value='" + value + "']").html(text);
        }

        function addOption(text, value) {
            var myCombo = $('#DefaultQualityProfileId');

            var exists = $("#DefaultQualityProfileId option[value='" + value + "']");

            if (exists.length == 0)
                myCombo.append($('\<option\> \</option\>').val(value).html(text));
        }

        function removeOption(value) {
            $("#DefaultQualityProfileId option[value='" + value + "']").remove();
        }

        function sendToServer(id) {
            $.ajax({
                type: "POST",
                url: deleteQualityProfileUrl,
                data: jQuery.param({ profileId: id }),
                error: function (req, status, error) {
                    alert("Sorry! We could not delete your Profile at this time. " + error);
                },
                success: function (data, textStatus, jqXHR) {
                    if (data == "ok") {
                        $("#profile_" + id).remove();
                        removeOption(id);
                    }

                    else {
                        alert(data);
                    }
                }
            });
        }
        
        function getProfileId(obj) {
            var parentProfileSection = $(obj).parents('.profileSection');
            return parentProfileSection.children('.qualityProfileId').val();
        }

        function getCleanId(obj) {
            var parentProfileSection = $(obj).parents('.profileSection');
            return parentProfileSection.children('.cleanId').val();
        }

        $(".profileName_textbox").live('keyup', function () {
            var value = $(this).val();
            var profileId = getProfileId(this);
            $("#title_" + profileId).text(value);
            renameOption(value, profileId);
        }).keyup();

        $('.quality-selectee').live('click', function () {
            var profileId = getProfileId(this);
            var cleanId = getCleanId(this);
            var cutoff = '#' + cleanId + '_Cutoff';
            var allowedString = '#' + cleanId + '_AllowedString';

            $(cutoff + ' option').each(function () { if ($(this).text().indexOf('Unknown') > -1) $(cutoff + ' option').remove(':contains("' + $(this).text() + '")'); });

            if ($(this).hasClass('quality-selected')) {
                $(this).removeClass('quality-selected');
                var toRemove = this.firstChild.data;

                $(cutoff + ' option').each(function () {
                    if ($(this).text().indexOf(toRemove) > -1)
                        $(cutoff + ' option').remove(':contains("' + $(this).text() + '")');
                });
            }

            else {
                $(this).addClass('quality-selected');
                $('<option>' + this.firstChild.data + '</option>').appendTo(cutoff);
            }

            var result = "";
            $("#selectable_" + profileId + " .quality-selected").each(function () {
                result += this.firstChild.data + ",";
            });

            $(allowedString).empty().val(result);
        });
    </script>
}
