@using NzbDrone.Core.Model
@{ViewBag.Title = "Misnamed";};
@section ActionMenu{
    <ul class="sub-menu">
        <li>@Ajax.ActionLink("Trim History", "Trim", "History", new AjaxOptions { OnSuccess = "reloadHistoryGrid" })</li>
        <li>@Ajax.ActionLink("Purge History", "Purge", "History", new AjaxOptions { OnSuccess = "reloadHistoryGrid" })</li>
    </ul>
}
<style>
    .searchImage
    {
        width: 18px;
        height: 18px;
        padding: 1px;
        margin: 2px;
        @*border-width: 1px;
        border-style: dashed;
        border-color: lightgray;*@
    }
    
    .searchImage:hover
    {
        background-color: #065EFE;
    }
</style>
<div class="grid-container">
    @{Html.Telerik().Grid<MisnamedEpisodeModel>().Name("misnamed")
               .TableHtmlAttributes(new { @class = "Grid" })
                .Columns(columns =>
                             {
                                 columns.Bound(c => c.SeriesTitle)
                                            .ClientTemplate("<a href=" +
                                                            Url.Action("Details", "Series", new { seriesId = "<#= SeriesId #>" }) +
                                                            "><#= SeriesTitle #></a>")
                                            .Title("Series Title");
                                 columns.Bound(c => c.CurrentName).Title("Current Name");
                                 columns.Bound(c => c.ProperName).Title("Proper Name");
                                 columns.Bound(c => c.EpisodeFileId)
                                     .Title("Actions")
                                     .Width("40");
                             })
                .DataBinding(data => data.Ajax().Select("_AjaxBinding", "Misnamed"))
                .Pageable(
                    c =>
                    c.PageSize(20).Position(GridPagerPosition.Bottom).Style(GridPagerStyles.NextPrevious))
                .EnableCustomBinding(true)
                .ClientEvents(clientEvents =>
                {
                    clientEvents.OnDataBound("grid_dataBound");
                })
                .Render();}
</div>
<script type="text/javascript">
    deleteHistoryRowUrl = '../History/Delete';
    redownloadUrl = '../History/Redownload';

    function reloadHistoryGrid() {
        var grid = $('#history').data('tGrid');
        grid.rebind();
        grid.sort("Date-desc");
    }

    function deleteHistoryRow(historyId) {
        $.ajax({
            type: "POST",
            url: deleteHistoryRowUrl,
            data: jQuery.param({ historyId: historyId }),
            success: function () {
                reloadHistoryGrid();
            }
        });
    }

    function redownload(historyId, episodeId) {
        $.ajax({
            type: "POST",
            url: redownloadUrl,
            data: jQuery.param({ historyId: historyId, episodeId: episodeId }),
            success: function () {
                reloadHistoryGrid();
            }
        });
    }

    function grid_dataBound(e) {
        var id = $(this).attr('id');
        var lastButton = $('#' + id + ' .t-arrow-last');
        lastButton.hide();
    }
</script>
